@model IEnumerable<BiuroRachunkowe.Models.InvoicePosition>

@{
	ViewBag.Title = "Pozycje";
}

<style>
	#positionsDiv thead td {
		background-color: #dddddd;
		top: 0;
	}

	#positionsDiv thead {
		top: 0;
	}
</style>

@{var det = ViewBag.Details as BiuroRachunkowe.Models.InvoiceHeader; }
<div class="form">
	@Html.Raw(TempData["msg"])
	<div class="row" style="padding-bottom:10px;padding-top:10px">
		<div class="col-sm-4">
			@Html.Label("Faktura:", htmlAttributes: new { @class = "control-label  " }) <br />
			@Html.EditorFor(x => det.InvoiceNumber, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
		</div>
		<div class="col-sm-4 ">
			@Html.Label("Voucher:", htmlAttributes: new { @class = "control-label  " }) <br />
			@Html.EditorFor(x => det.Voucher, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
		</div>
		
		<div class="col-sm-4 form-group">
			@Html.Label("Data Faktury:", htmlAttributes: new { @class = "control-label  " }) <br />
			@Html.EditorFor(x => det.InvoiceDate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @Value = det.InvoiceDate.ToString("yyyy-MM-dd") } })
		</div>
	</div>
	<div class="row" style="padding-bottom:10px">
		<div class="col-sm-4 form-group">
			@Html.Label("Inne Koszty:", htmlAttributes: new { @class = "control-label  " }) <br />
			@Html.EditorFor(x => det.AdditionalCost, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
		</div>
		<div class="col-sm-4 form-group">
			@Html.Label("Koszty Transportu:", htmlAttributes: new { @class = "control-label  " }) <br />
			@Html.EditorFor(x => det.TransportCost, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
		</div>

		<div class="col-sm-4 form-group">
			@Html.Label("Wartość Faktury:", htmlAttributes: new { @class = "control-label  " }) <br />
			@Html.EditorFor(x => det.InvoiceValue, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
		</div>

		
	</div>

	<div class="row" style="padding-bottom:10px">
		



		<div class="col-sm-4 ">
			@Html.Label("Dostawca:", htmlAttributes: new { @class = "control-label  " }) <br />

			@Html.EditorFor(x => det.Supplier, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } }) <br />


		</div>
		<div class="col-sm-4 form-group">
			@Html.Label("Waluta:", htmlAttributes: new { @class = "control-label  " }) <br />
			@Html.EditorFor(x => det.Currency, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })<br />
			
		</div>
		<div class="col-sm-4 form-group">
			@Html.Label("Kurs:", htmlAttributes: new { @class = "control-label  " }) <br />
			@Html.EditorFor(x => det.ExchangeRate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })<br />
		</div>
	</div>
</div>
<div>
	@{ Decimal waga = 0;
		Decimal wartoscP = 0;
		Decimal wartoscPos = 0;

		foreach (var pos in Model)
		{
			wartoscP += pos.Quantity * pos.Price;
			waga += pos.Weight;
		}

		Decimal Value = det.InvoiceValue - wartoscP;
		Decimal ValueP = Value;
		List<BiuroRachunkowe.Models.InvoicePosition> postions = Model.ToList();
		if ((det.AdditionalCost.HasValue && det.AdditionalCost != 0) || (det.TransportCost.HasValue && det.TransportCost != 0))
		{
			if (Value != 0)
			{


				Decimal addValue = 0;
				if (Model.Any(x => x.Weight== null && x.Weight == 0))
				{
					postions = postions.OrderBy(x => x.Price * x.Quantity).ToList();
				}
				else
				{
					postions = postions.OrderBy(x => x.Weight).ToList();
				}
				for (int i = 0; i < postions.Count(); i++)
				{
					if (i == postions.Count - 1)
					{
						addValue = ValueP;
					}
					else if (Model.Any(x => x.Weight == null || x.Weight == 0))//wedlug wart
					{
						addValue = Value * ((postions[i].Quantity * postions[i].Price) / det.InvoiceValue);
					}
					else//wagi
					{
						addValue = Value * (postions[i].Weight / waga);
					}
					postions[i].value = postions[i].Price * postions[i].Quantity + addValue;
					ValueP = ValueP - addValue;
					if (ValueP <= 0)
					{
						break;
					}
				}

			}
		}
	}
	<center>
		<h3>Pozycje:</h3>
		<div id="positionsDiv" style="height:250px;overflow-x:hidden;">
			<table class="table" id="table2" style="width:100%">

				<thead>
					<tr>
						<td>Poz.Nr</td>
						<td>Item Number</td>
						<td>Waga</td>
						<td>Ilość</td>
						<td>Wartość Pozycji</td>
						<td>Cena</td>
						<td>Kod HS</td>
					</tr>
				</thead>

				@foreach (var item in postions.OrderBy(x => x.PositionNumber))
				{
					String selected = "";
					if (Session["InvoicePositionSelected"] != null)
					{
						if (item.Id == Convert.ToInt32(Session["InvoicePositionSelected"]))
						{
							selected = "selected";
						}
					}

					<tr class="@selected" onclick="location.href='@(Url.Action("ImportInvoicePos", "Office", new { posid = item.Id}))'" onmouseover="ChangeBackgroundColor(this)" onmouseout="RestoreBackgroundColor(this)" style="cursor:pointer">
						<td>@item.PositionNumber</td>
						<td>@item.Itemnumber</td>
						<td>@item.Weight.ToString()</td>
						<td>
							@item.Quantity.ToString("F")
						</td>
						<td>

							@{Decimal wart = item.value != 0 ? item.value.Value : (item.Quantity * item.Price); }
							@wart.ToString("F")


						</td>
						
						<td>@item.Price</td>
						<td>@item.HSCode</td>

					</tr>

					wartoscPos += wart;

				}
			</table>
		</div>
	</center>
	<div class="row" style="margin-top:1%">
		<div class="col-sm-6">
			@Html.Label("Razem Waga:", htmlAttributes: new { @class = "control-label col-sm-4 " })
			@Html.Editor("1", new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @Value = waga.ToString("F") } })<br />
		</div>
		<div class="col-sm-6">
			@Html.Label("Razem Wartość:", htmlAttributes: new { @class = "control-label col-sm-4 " })
			@Html.Editor("2", new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @Value = wartoscPos.ToString("F") } })<br />
		</div>
	</div>
	<div class="row" style="padding-bottom:3%;margin-top:10px">
		<div style="text-align:center;margin-left:8%;margin-right:8%;">
			
			<div class="col-sm-3">
				@if (Session["InvoicePositionSelected"] != null && !User.IsInRole("Intern"))
				{
					@Html.ActionLink("Edytuj", "InvoicePositionEdit", new { id = Convert.ToInt32(Session["InvoicePositionSelected"]) }, new { @class = "btn btn-default" })
				}
				else
				{
					@Html.ActionLink("Edytuj", "InvoicePositionEdit", new { id = Convert.ToInt32(Session["InvoicePositionSelected"]) }, new { @class = "btn btn-default", @disabled = "disabled",onclick="return false" })
				}
			</div>
			<div class="col-sm-3">

				@if (User.IsInRole("Intern"))
				{
					@Html.ActionLink("Stwórz", "InvoicePositionCreate", new { id = det.Id }, new { @class = "btn btn-default" ,@disabled="disabled",onclick="return false"})
				}
				else
				{
					@Html.ActionLink("Stwórz", "InvoicePositionCreate", new { id = det.Id }, new { @class = "btn btn-default" })

				}


			</div>
			<div class="col-sm-3">
				@if (Session["InvoicePositionSelected"] != null && !User.IsInRole("Intern"))
				{
					using (Html.BeginForm("InvoicePositionDelete", "Office", FormMethod.Post))
					{
						@Html.AntiForgeryToken()
						@Html.Hidden("idpos", Convert.ToInt32(Session["InvoicePositionSelected"]))

						<input type="submit" value="Usuń" class="btn btn-default" onclick="return confirm('Czy na pewno chcesz usunąć tą pozycje?')" />
					}
				}
				else
				{
					<input type="submit" value="Usuń" class="btn btn-default" disabled onclick="return false;" />
				}
			</div>
			<div class="col-sm-3">
				@if (Session["InvoicePositionSelected"] != null)
				{
					@Html.ActionLink("Szczegóły", "InvoicePositionDetails", new { id = Convert.ToInt32(Session["InvoicePositionSelected"]) }, new { @class = "btn btn-default" })
				}
				else
				{
					@Html.ActionLink("Szczegóły", "InvoicePositionDetails", new { id = Convert.ToInt32(Session["InvoicePositionSelected"]) }, new { @class = "btn btn-default", @disabled = "disabled" })
				}
			</div>
		</div>
	</div>
</div>
@Html.ActionLink("Wróć", "Invoicelist", new { id = det.Id }, new { @class = "btn  btn-default" })



<script type="text/javascript">





	function ChangeBackgroundColor(row) {
		row.style.backgroundColor = "#a4d4e6";
	}

	function RestoreBackgroundColor(row) {
		if ($(row).attr('class') == "selected") {
			row.style.backgroundColor = "#a4d4e6";
		}
		else {
			row.style.backgroundColor = "#ffffff";
		}
	}
</script>