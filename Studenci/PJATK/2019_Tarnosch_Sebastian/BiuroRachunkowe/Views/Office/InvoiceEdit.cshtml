@model BiuroRachunkowe.Models.InvoiceHeaderViewModel

<script src="@Url.Content("~/Scripts/jquery-3.3.1.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.12.1.min.js")"></script>
<link href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" rel="stylesheet" type="text/css">

<h2>Edytuj fakturę numer:@Model.InvoiceNumber</h2>


@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.Id)

		<div class="row" style="margin-left:10px">
			<div class="form-group col-sm-4">
				@Html.LabelFor(model => model.InvoiceNumber, htmlAttributes: new { @class = "control-label " })
				<div>
					@Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group col-sm-4">
				@Html.LabelFor(model => model.InvoiceDate, htmlAttributes: new { @class = "control-label " })
				<div>
					@Html.EditorFor(model => model.InvoiceDate, new { htmlAttributes = new { @class = "date-picker form-control", @Value = Model.InvoiceDate.ToString("yyyy-MM-dd") } })
					@Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>
		<div class="row" style="margin-left:10px">

			<div class="form-group col-sm-4">
				@Html.LabelFor(model => model.TypeOfTranosport, htmlAttributes: new { @class = "control-label " })
				<div>
					@Html.DropDownListFor(model => model.TypeOfTranosport, Model.TypeOfTransportDDL, new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.TypeOfTranosport, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="form-group col-sm-4">
				@Html.LabelFor(model => model.Voucher, htmlAttributes: new { @class = "control-label " })
				<div>
					@Html.EditorFor(model => model.Voucher, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Voucher, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>
		<div class="row" style="margin-left:10px">

			<div class="form-group col-sm-4">
				@Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label " })
				<div>
					@Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group col-sm-4">
				@Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label " })
				<div>
					@Html.DropDownListFor(model => model.Currency, Model.CurrencyDDL, new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>
		<div class="row" style="margin-left:10px">
			<div class="form-group col-sm-4">
				@Html.LabelFor(model => model.ExchangeRate, htmlAttributes: new { @class = "control-label " })
				<div>
					@Html.EditorFor(model => model.ExchangeRate, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.ExchangeRate, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group col-sm-4">
				@Html.LabelFor(model => model.InvoiceValue, htmlAttributes: new { @class = "control-label " })
				<div>
					@Html.EditorFor(model => model.InvoiceValue, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.InvoiceValue, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>
		<div class="row" style="margin-left:10px">
			<div class="form-group col-sm-4">
				@Html.LabelFor(model => model.TransportCost, htmlAttributes: new { @class = "control-label " })
				<div>
					@Html.EditorFor(model => model.TransportCost, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.TransportCost, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group col-sm-4">
				@Html.LabelFor(model => model.AdditionalCost, htmlAttributes: new { @class = "control-label " })
				<div>
					@Html.EditorFor(model => model.AdditionalCost, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.AdditionalCost, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>
		<div class="row" style="margin-left:10px">
			<div class="form-group col-sm-4">
				@Html.LabelFor(model => model.Supplier, htmlAttributes: new { @class = "control-label " })
				<div>
					@Html.DropDownListFor(model => model.Supplier, Model.SupplierDDL, new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.Supplier, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group col-sm-4">
				@Html.LabelFor(model => model.ShipFrom, htmlAttributes: new { @class = "control-label " })
				<div>
					@Html.DropDownListFor(model => model.ShipFrom, Model.ShipFromDDL, new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.ShipFrom, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>

		<div class="row">
			<div class="form-group col-sm-4">
				<div class="col-md-offset-10 col-md-2">
					<input type="submit" value="Zapisz" class="btn btn-default" />
				</div>
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Wróć", "InvoiceList", null, new { @class = "btn btn-default " })
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
	$(function () {
		$('.date-picker').datepicker({
			dateFormat: 'yy-mm-dd'
		});
	});

	$("#Currency").on("change", function () {
		let curr = $("#Currency").val();
		if (curr == "PLN")
			$("#ExchangeRate").val(1.00);
		else if (curr == "EUR")
			$("#ExchangeRate").val(4.30);
		else if (curr == "USD")
			$("#ExchangeRate").val(3.85);

	});


	$(document).ready(function () {
		let curr = $("#Currency").val();
		if (curr == "PLN")
			$("#ExchangeRate").val(1.00);
		else if (curr == "EUR")
			$("#ExchangeRate").val(4.30);
		else if (curr == "USD")
			$("#ExchangeRate").val(3.85);
	});
</script>